{"version":3,"file":"component---src-pages-debounce-mdx-c0946605e1a5468a76e1.js","mappings":"kOAOaA,EAAe,CAC1B,MAAS,qBACT,YAAe,qBACf,KAAQ,CAAC,aAELC,EAAc,CAClBD,aAAAA,GAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAC5E,yCACA,mCACA,0DACA,2BACE,aAAGC,WAAW,cAAd,uJAEF,2BACA,2EACA,oBAAK,gBAAMA,WAAW,OAAjB,oNAaR,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://blog/./src/pages/debounce.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"实现一个 debounce 防抖函数\",\n  \"description\": \"实现一个 debounce 防抖函数\",\n  \"tags\": [\"debounce\"]\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`实现一个 debounce 防抖函数`}</h2>\n    <h3>{`什么是 debouce？`}</h3>\n    <p>{`翻看 Underscore 的文档，它是这么描述 debounce 的：`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`返回 function 函数的防反跳版本, 将延迟函数的执行(真正的执行)在函数最后一次调用时刻的 wait 毫秒之后. 对于必须在一些输入（多是一些用户操作）停止到达之后执行的行为有帮助。 例如: 渲染一个 Markdown 格式的评论预览, 当窗口停止改变大小之后重新计算布局, 等等.`}</p>\n    </blockquote>\n    <h3>{`基本实现`}</h3>\n    <p>{`debounce 本质上，是一个定时器 setTimeout，在 wait 毫秒时间之后，执行传入的函数：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`function debounce(func, wait, immediate) {\n  let timeout;\n\n  const debounced = function() {\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(func, wait);\n  }\n\n  return debounced;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}